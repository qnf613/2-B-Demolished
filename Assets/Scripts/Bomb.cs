using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class Bomb : MonoBehaviour
{
    [SerializeField] private GameObject explosion;
    [SerializeField] private float countdown = 3f;
    [SerializeField] private int damage;
    private float toBeNormalBomb = 0;
    [SerializeField] private bool isBombTypeP;
    [SerializeField] private bool isBlowUp = false;
    private float invincibleDuration = 1;
    private float timeToDestroy = .1f;
    private float timeToExplode = .05f;
    //Component
    private Rigidbody2D rigid;
    private SpriteRenderer spriteRenderer;
    private Animator animator;
    public LayerMask levelMask;
    private void Start()
    {
        gameObject.layer = 16;
        spriteRenderer = GetComponent<SpriteRenderer>();
        animator = GetComponent<Animator>();
        Invoke("Blowup", countdown);
        SoundManager.instance.PlayCountdown();
    }

    private void Update()
    {
        //inherit this bomb's damage to explosions that will generated by this bomb
        Explosion ex = explosion.GetComponent<Explosion>();
        ex.exDamage = damage;
        //check up the bomb's type = who's bomb is this? bomba? bamba?
        if (isBombTypeP)
        {
            ex.bombTypeP = true;
        }
        else
        {
            ex.bombTypeP = false;
        }

        //turn bomb to normal bomb, <<explanation>> player will not be blocked by the bomb it planted for a second
        toBeNormalBomb += Time.deltaTime;
        if (toBeNormalBomb >= invincibleDuration)
        {
            gameObject.tag = "PlayerBomb";
        }
        if (!gameObject.CompareTag("BombJustPlanted"))
        {
            gameObject.layer = 15;
        }
        //if bomb destroyed, number of the bomb player planted on the map will decrease
        if (isBlowUp)
        {
            PlayerController.bombOnMap--;
            isBlowUp = false;
        }
    }
    //when bomb blow up, call CreateExplosions to current position, and 4 corss directions from it
    private void Blowup()
    {
        isBlowUp = true;
        Instantiate(explosion, transform.position, transform.rotation);
        StartCoroutine(CreateExplosions(Vector2.up));
        StartCoroutine(CreateExplosions(Vector2.right));
        StartCoroutine(CreateExplosions(Vector2.down));
        StartCoroutine(CreateExplosions(Vector2.left));
        GetComponent<SpriteRenderer>().enabled = false;
        SoundManager.instance.PlayExplosion();
        Destroy(gameObject, timeToDestroy);
    }
    //crete explosion
    private IEnumerator CreateExplosions(Vector3 direction)
    {
        //if its power bomb, which is bomba's bomb, explosion will not blocked hard block but still will be blocked by undestroyable objects
        if (isBombTypeP)
        {
            for (int i = 1; i < 2; i++)
            {
                RaycastHit2D hit = Physics2D.Raycast(transform.position + new Vector3(0, 0, .5f), direction, i, levelMask);

                if (!hit.collider)
                {
                    Instantiate(explosion, transform.position + (i * direction), explosion.transform.rotation);
                }

                else
                {
                    break;
                }

                yield return new WaitForSeconds(timeToExplode);
            }
        }
        //if its wide bomb, which is bamba's bomb, explosion will blocked by hard block & undestroyable objects
        else
        {
            for (int i = 1; i < 3; i++)
            {
                RaycastHit2D hit = Physics2D.Raycast(transform.position + new Vector3(0, 0, .5f), direction, i, levelMask);

                if (!hit.collider)
                {
                    Instantiate(explosion, transform.position + (i * direction), explosion.transform.rotation);
                }

                else
                {
                    break;
                }

                yield return new WaitForSeconds(timeToExplode);
            }
        }

    }
    //chain explosion
    private void OnTriggerEnter2D(Collider2D other)
    {
        if (other.tag == "Explosion")
        {
            Invoke("Blowup", timeToDestroy);
        }
    }
}

